#!/bin/bash

# Prompt for the client name
read -p "Enter the client name: " client_name

# Base directory for the structure
base_dir="./$client_name/nmap"

# Check if the base directory exists
if [ ! -d "$base_dir/tcp" ] && [ ! -d "$base_dir/udp" ]; then
    echo "Neither TCP nor UDP directories found in $base_dir!"
    exit 1
fi

# Iterate over each IP directory in both TCP and UDP directories
for protocol in tcp udp; do
    protocol_dir="$base_dir/$protocol"
    if [ ! -d "$protocol_dir" ]; then
        echo "Protocol directory $protocol_dir not found!"
        continue
    fi

    for ip_dir in "$protocol_dir"/*
    do
        # Check if it's a directory
        if [ -d "$ip_dir" ]; then
            # Extract the IP address from the directory name
            ip=$(basename "$ip_dir" | tr '_' '.')

            # Iterate over each service directory
            for service_dir in "$ip_dir/Discovered_Ports"/*
            do
                # Check if it's a directory
                if [ -d "$service_dir" ]; then
                    # Iterate over each port directory
                    for port_dir in "$service_dir"/*
                    do
                        # Check if it's a directory
                        if [ -d "$port_dir" ]; then
                            # Extract the port number from the directory name
                            port=$(basename "$port_dir")

                            # Check if SSL/TLS is in use on the port
                            echo "Checking if SSL/TLS is in use on $ip:$port"
                            if timeout 10 openssl s_client -connect "$ip:$port" -servername "$ip" < /dev/null 2>&1 | grep -q "CONNECTED"; then
                                echo "SSL/TLS is in use on $ip:$port"

                                # Create a subdirectory named 'sslscan' within the port directory
                                sslscan_dir="$port_dir/sslscan"
                                mkdir -p "$sslscan_dir"

                                # Run sslscan on the IP:PORT combination
                                echo "Running sslscan on $ip:$port"
                                if ! sslscan "$ip:$port" > "$sslscan_dir/sslscan_output.txt" 2>&1; then
                                    echo "Warning: sslscan failed for $ip:$port"
                                fi

                                # Create a subdirectory named 'testssl' within the port directory
                                testssl_dir="$port_dir/testssl"
                                mkdir -p "$testssl_dir"

                                # Run testssl on the IP:PORT combination
                                echo "Running testssl on $ip:$port"
                                if ! testssl "$ip:$port" > "$testssl_dir/testssl_output.txt" 2>&1; then
                                    echo "Warning: testssl failed for $ip:$port"
                                fi
                            else
                                echo "SSL/TLS is not in use on $ip:$port"
                            fi
                        fi
                    done
                fi
            done
        fi
    done
done

echo "SSL scan and TestSSL completed for all IP:PORT combinations."
