#!/bin/bash

# ANSI color codes for consistent styling
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to log messages
log() {
    local level=$1
    local message=$2
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    case $level in
        "INFO") echo -e "${GREEN}[INFO]${NC} ${timestamp} - $message" ;;
        "ERROR") echo -e "${RED}[ERROR]${NC} ${timestamp} - $message" ;;
        "WARN") echo -e "${YELLOW}[WARN]${NC} ${timestamp} - $message" ;;
    esac
}

# Prompt for the client name
read -p "Enter the client name: " client_name

# Prompt for credentials
read -p "Enter username (leave empty for anonymous): " username
read -s -p "Enter password (leave empty for anonymous): " password
echo # New line after password input

# Build smbclient command with optional credentials
smbclient_cmd="smbclient"
if [ ! -z "$username" ]; then
    if [ ! -z "$password" ]; then
        smbclient_cmd="$smbclient_cmd -U '$username%$password'"
    else
        smbclient_cmd="$smbclient_cmd -U '$username'"
    fi
else
    smbclient_cmd="$smbclient_cmd -N" # No password (anonymous)
fi

# Base directory for the structure
base_dir="./$client_name/nmap/tcp"

# Check if the base directory exists
if [ ! -d "$base_dir" ]; then
    log "ERROR" "Base directory not found: $base_dir"
    exit 1
fi

# Iterate over each IP directory
for ip_dir in "$base_dir"/*; do
    # Check if it's a directory
    if [ -d "$ip_dir" ]; then
        # Extract the IP address from the directory name
        ip=$(basename "$ip_dir" | tr '_' '.')
        
        # Path to the discovered ports directory
        discovered_ports="$ip_dir/Discovered_Ports"
        
        # Check for SMB-related services (netbios-ssn or microsoft-ds)
        if [ -d "$discovered_ports/netbios-ssn" ] || [ -d "$discovered_ports/microsoft-ds" ]; then
            # Create smbclient directory in the appropriate service folder
            if [ -d "$discovered_ports/microsoft-ds/445" ]; then
                smb_dir="$discovered_ports/microsoft-ds/445/smbclient"
            elif [ -d "$discovered_ports/netbios-ssn/139" ]; then
                smb_dir="$discovered_ports/netbios-ssn/139/smbclient"
            else
                continue
            fi
            
            mkdir -p "$smb_dir"
            
            # Run smbclient on the IP
            log "INFO" "Running smbclient list shares on $ip"
            
            # Create output files for different formats
            eval "$smbclient_cmd -L //$ip/ -g" > "$smb_dir/shares_grepable.txt" 2>/dev/null
            eval "$smbclient_cmd -L //$ip/" > "$smb_dir/shares_readable.txt" 2>/dev/null
            
            # Check if the scan was successful
            if [ $? -eq 0 ]; then
                log "INFO" "SMB shares enumeration completed for $ip"
                log "INFO" "Results saved in $smb_dir/"
            else
                log "WARN" "Failed to enumerate shares on $ip"
            fi
        fi
    fi
done

log "INFO" "SMB shares enumeration completed for all hosts." 