#!/bin/bash

# Function to parse Nikto output and save vulnerabilities in a readable text format
parse_nikto_output() {
    local nikto_output_file="$1"
    local vulnerabilities_file="$2"
    
    echo "Parsing Nikto output from $nikto_output_file"
    
    # Define an array of keywords to look for
    local keywords=(
        'OSVDB'
        'vulnerable'
        'XSS'
        'Cross Site Scripting'
        'header'
        'leaks'
        'x-powered-by'
        'access-control-allow-origin'
        'X-Frame-Options'
        'Strict-Transport-Security'
        'X-Content-Type-Options'
        'wildcard certificate'
        'SQL Injection'
        'Directory Listing'
        'Server Version'
        'Sensitive Information'
        'Insecure'
        'Weak'
        'Misconfiguration'
        'Exposure'
        'Disclosure'
        'Server:'  # Updated to capture the Server header
    )
    
    # Create a regex pattern from the keywords array
    local pattern=$(IFS='|'; echo "${keywords[*]}")
    
    # Extract lines that indicate vulnerabilities and group them
    local vulnerabilities=()
    while IFS= read -r line; do
        vulnerabilities+=("$(echo "$line" | sed 's/^+ //')")
    done < <(grep -E "$pattern" "$nikto_output_file")
    
    if [ ${#vulnerabilities[@]} -gt 0 ]; then
        local url=$(basename "$(dirname "$(dirname "$(dirname "$(dirname "$(dirname "$nikto_output_file")")")")")")
        local port=$(basename "$(dirname "$(dirname "$nikto_output_file")")")
        
        # Output the information in a readable format
        echo "URL: $url" >> "$vulnerabilities_file"
        echo "Port: $port" >> "$vulnerabilities_file"
        echo "Vulnerabilities:" >> "$vulnerabilities_file"
        for vulnerability in "${vulnerabilities[@]}"; do
            echo "  - $vulnerability" >> "$vulnerabilities_file"
        done
        echo "----------------------------------------" >> "$vulnerabilities_file"
    fi
    
    echo "Vulnerabilities saved to $vulnerabilities_file"
}

# Base directory for the structure
read -p "Enter the client name: " client_name
base_dir="./$client_name/nmap"

# Check if the base directory exists
if [ ! -d "$base_dir" ]; then
    echo "Base directory not found!"
    exit 1
fi

# Create a vulnerabilities directory if it doesn't exist
vulnerabilities_dir="./$client_name/vulnerabilities"
mkdir -p "$vulnerabilities_dir"

# Create a text file for the vulnerabilities report
output_txt="$vulnerabilities_dir/nikto_vulns.txt"
echo "Vulnerabilities Report" > "$output_txt"
echo "======================" >> "$output_txt"

# Iterate over all Nikto output files and parse them
for protocol in tcp udp; do
    protocol_dir="$base_dir/$protocol"
    if [ ! -d "$protocol_dir" ]; then
        echo "Protocol directory $protocol_dir not found!"
        continue
    fi

    for url_dir in "$protocol_dir"/*
    do
        if [ -d "$url_dir" ]; then
            url=$(basename "$url_dir")
            for service_dir in "$url_dir/Discovered_Ports"/*
            do
                if [ -d "$service_dir" ]; then
                    for port_dir in "$service_dir"/*
                    do
                        if [ -d "$port_dir" ]; then
                            port=$(basename "$port_dir")
                            nikto_dir="$port_dir/nikto"
                            nikto_output_file="$nikto_dir/nikto_output.txt"
                            vulnerabilities_file="$output_txt"
                            
                            if [ -f "$nikto_output_file" ]; then
                                parse_nikto_output "$nikto_output_file" "$vulnerabilities_file"
                            else
                                echo "Nikto output file $nikto_output_file not found!"
                            fi
                        fi
                    done
                fi
            done
        fi
    done
done

echo "Nikto output parsing completed for all URL:PORT combinations."
echo "Vulnerabilities report saved to $output_txt"