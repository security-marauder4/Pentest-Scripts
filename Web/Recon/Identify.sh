#!/bin/bash

# Prompt for the client name
read -p "Enter the client name: " client_name

# Base directory for the structure
base_dir="./$client_name/nmap"

# Check if the base directory exists
if [ ! -d "$base_dir" ]; then
    echo "Base directory not found!"
    exit 1
fi

# Function to run whatweb scans with rate limiting
run_whatweb_scans() {
    for protocol in tcp udp; do
        protocol_dir="$base_dir/$protocol"
        if [ ! -d "$protocol_dir" ]; then
            echo "Protocol directory $protocol_dir not found!"
            continue
        fi

        for ip_dir in "$protocol_dir"/*
        do
            if [ -d "$ip_dir" ]; then
                ip=$(basename "$ip_dir" | tr '_' '.')
                for service_dir in "$ip_dir/Discovered_Ports"/*
                do
                    if [ -d "$service_dir" ]; then
                        service=$(basename "$service_dir")
                        # Only scan web-related services
                        if [[ "$service" =~ ^(http|https|www|ssl)$ ]]; then
                            for port_dir in "$service_dir"/*
                            do
                                if [ -d "$port_dir" ]; then
                                    port=$(basename "$port_dir")
                                    whatweb_dir="$port_dir/whatweb"
                                    mkdir -p "$whatweb_dir"
                                    if [ "$service" == "http" ]; then
                                        url="http://$ip:$port"
                                    elif [ "$service" == "ssl" ] || [ "$service" == "https" ]; then
                                        url="https://$ip:$port"
                                    else
                                        echo "Unknown service $service, skipping whatweb scan."
                                        continue
                                    fi
                                    echo "Running whatweb on $url"
                                    # Added rate limiting and safer options
                                    whatweb -a 1 --wait=3 --max-threads=1 \
                                           --no-errors --follow-redirect=never \
                                           "$url" > "$whatweb_dir/whatweb_output.txt"
                                    echo "WhatWeb output saved to $whatweb_dir/whatweb_output.txt"
                                    # Add a small delay between scans
                                    sleep 2
                                fi
                            done
                        fi
                    fi
                done
            fi
        done
    done
}

# Function to run nikto scans with rate limiting
run_nikto_scans() {
    for protocol in tcp udp; do
        protocol_dir="$base_dir/$protocol"
        if [ ! -d "$protocol_dir" ]; then
            echo "Protocol directory $protocol_dir not found!"
            continue
        fi

        for ip_dir in "$protocol_dir"/*
        do
            if [ -d "$ip_dir" ]; then
                ip=$(basename "$ip_dir" | tr '_' '.')
                for service_dir in "$ip_dir/Discovered_Ports"/*
                do
                    if [ -d "$service_dir" ]; then
                        service=$(basename "$service_dir")
                        # Only scan web-related services
                        if [[ "$service" =~ ^(http|https|www|ssl)$ ]]; then
                            for port_dir in "$service_dir"/*
                            do
                                if [ -d "$port_dir" ]; then
                                    port=$(basename "$port_dir")
                                    nikto_dir="$port_dir/nikto"
                                    mkdir -p "$nikto_dir"
                                    if [ "$service" == "http" ]; then
                                        url="http://$ip:$port"
                                    elif [ "$service" == "ssl" ] || [ "$service" == "https" ]; then
                                        url="https://$ip:$port"
                                    else
                                        echo "Unknown service $service, skipping nikto scan."
                                        continue
                                    fi
                                    echo "Running nikto on $url"
                                    # Added tuning and safer options
                                    nikto -h "$url" -Format txt \
                                          -output "$nikto_dir/nikto_output.txt" \
                                          -maxtime 900 \
                                          -Tuning 123457 \
                                          -ask no \
                                          -nointeractive \
                                          -timeout 10 \
                                          -Pause 2
                                    echo "Nikto output saved to $nikto_dir/nikto_output.txt"
                                    # Add a delay between scans
                                    sleep 5
                                fi
                            done
                        fi
                    fi
                done
            fi
        done
    done
}

# Function to create a summary report
create_summary() {
    summary_file="$base_dir/web_scan_summary.txt"
    echo "Web Scan Summary - $(date)" > "$summary_file"
    echo "=========================" >> "$summary_file"
    
    find "$base_dir" -type f -name "whatweb_output.txt" -exec sh -c '
        echo "\nWhatWeb findings for $(dirname {}):";
        grep -A 2 "Summary" "{}" 2>/dev/null || echo "No summary found"
    ' >> "$summary_file" \;
    
    find "$base_dir" -type f -name "nikto_output.txt" -exec sh -c '
        echo "\nNikto findings for $(dirname {}):";
        grep "+" "{}" 2>/dev/null || echo "No findings"
    ' >> "$summary_file" \;
}

# Main execution
echo "Starting web service identification..."
run_whatweb_scans
echo "WhatWeb scans completed."

echo "Starting Nikto scans..."
run_nikto_scans
echo "Nikto scans completed."

create_summary
echo "Web scans completed. Summary available at $base_dir/web_scan_summary.txt"